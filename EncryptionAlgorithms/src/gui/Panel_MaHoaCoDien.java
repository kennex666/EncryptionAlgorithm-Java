/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import algorithms.CaesarCipher;
import algorithms.Playfair;
import algorithms.RailFenceCipher;

import java.awt.Color;
import java.awt.event.FocusEvent;
import java.util.Random;
import java.util.regex.Pattern;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author duong
 */
public class Panel_MaHoaCoDien extends javax.swing.JPanel {
    private final String alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    private final String characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";

    private enum EnumThuatToan {
        CAESAR_CIPHER,
        PLAYFAIR,
        RAIL_FENCE_CIPHER_ROW
    }

    private EnumThuatToan thuatToanDangChon;

    private ButtonGroup btnGroupSelection;

    /**
     * Creates new form Panel_MaHoaCoDien
     */
    public Panel_MaHoaCoDien() {
        initComponents();
        thuatToanDangChon = EnumThuatToan.CAESAR_CIPHER;
        btnGroupSelection = new ButtonGroup();
        btnGroupSelection.add(radEncrypt);
        btnGroupSelection.add(radDecrypt);
        radEncrypt.setSelected(true);

        txtLoadConsole.setLineWrap(true);
        txtInput.setLineWrap(true);
        txtOutput.setLineWrap(true);
        btnSubmit.setForeground(Color.BLUE);
         txtLoadConsole.setText("---\n Khởi động chương trình thành công \n ---"
                + "\nTác giả: Dương Thái Bảo"
                + "\nXem mã nguồn mở: https://github.com/kennex666/EncryptionAlgorithm-Java");


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel2 = new javax.swing.JLabel();
        cboEncryptAlgo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        radEncrypt = new javax.swing.JRadioButton();
        radDecrypt = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        txtKey = new javax.swing.JTextField();
        lblInput = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtInput = new javax.swing.JTextArea();
        lblOutput = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();
        btnSubmit = new javax.swing.JButton();
        chkDebug = new javax.swing.JCheckBox();
        panelConsole = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtLoadConsole = new javax.swing.JTextArea();
        lblDebugMode = new javax.swing.JLabel();
        btnClearConsole = new javax.swing.JButton();
        btnRandom = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jInternalFrame1.setVisible(true);

        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 23, 0, 23, 0, 23, 0, 23, 0, 23, 0};
        layout.rowHeights = new int[] {0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0};
        setLayout(layout);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Thuật toán:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        add(jLabel2, gridBagConstraints);

        cboEncryptAlgo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboEncryptAlgo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Caesar Cipher", "Playfair", "Rail Fence Cipher (dùng Độ sâu)" }));
        cboEncryptAlgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboEncryptAlgoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(cboEncryptAlgo, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Chế độ:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLabel3, gridBagConstraints);

        radEncrypt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        radEncrypt.setText("Mã hoá");
        radEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radEncryptActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        add(radEncrypt, gridBagConstraints);

        radDecrypt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        radDecrypt.setText("Giải mã");
        radDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radDecryptActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        add(radDecrypt, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Khoá:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLabel1, gridBagConstraints);

        txtKey.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKeyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(txtKey, gridBagConstraints);

        lblInput.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblInput.setText("Bản rõ:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        add(lblInput, gridBagConstraints);

        txtInput.setColumns(20);
        txtInput.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtInput.setRows(5);
        txtInput.setToolTipText("");
        txtInput.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txtInput);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(jScrollPane2, gridBagConstraints);

        lblOutput.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblOutput.setText("Bản mã:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        add(lblOutput, gridBagConstraints);

        txtOutput.setEditable(false);
        txtOutput.setColumns(20);
        txtOutput.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtOutput.setRows(5);
        txtOutput.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtOutput.setDragEnabled(true);
        jScrollPane3.setViewportView(txtOutput);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        add(jScrollPane3, gridBagConstraints);

        btnSubmit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSubmit.setText("Mã hoá");
        btnSubmit.setToolTipText("");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(btnSubmit, gridBagConstraints);

        chkDebug.setSelected(true);
        chkDebug.setText("Chế độ nhà phát triển");
        chkDebug.setToolTipText("Khi bật chức năng, bạn sẽ thấy được một số bước mà phần mềm thực hiện thao tác");
        chkDebug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDebugActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(chkDebug, gridBagConstraints);

        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0};
        jPanel1Layout.rowHeights = new int[] {0, 16, 0, 16, 0};
        panelConsole.setLayout(jPanel1Layout);

        txtLoadConsole.setEditable(false);
        txtLoadConsole.setColumns(20);
        txtLoadConsole.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtLoadConsole.setRows(5);
        txtLoadConsole.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jScrollPane4.setViewportView(txtLoadConsole);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.2;
        panelConsole.add(jScrollPane4, gridBagConstraints);

        lblDebugMode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDebugMode.setText("Dành cho Developers (Xem cách hoạt động)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        panelConsole.add(lblDebugMode, gridBagConstraints);

        btnClearConsole.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClearConsole.setText("Xoá rỗng nhật ký");
        btnClearConsole.setToolTipText("Nhật ký phát triển bên trên sẽ bị xoá rỗng");
        btnClearConsole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearConsoleActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        panelConsole.add(btnClearConsole, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        add(panelConsole, gridBagConstraints);

        btnRandom.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRandom.setText("Dữ liệu ngẫu nhiên");
        btnRandom.setToolTipText("Khi chọn nút này, dữ liệu sẽ được phát sinh ngẫu nhiên");
        btnRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRandomActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(btnRandom, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private JTextArea getConsoleLog() {
        return txtLoadConsole;
    }

    private void radEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radEncryptActionPerformed
        // TODO add your handling code here:
        lblInput.setText("Bản rõ:");
        lblOutput.setText("Bản mã:");
        btnSubmit.setText("Mã hoá");
        
        txtInput.setText(txtOutput.getText());
        txtOutput.setText("");
        
        btnSubmit.setForeground(Color.BLUE);
    }//GEN-LAST:event_radEncryptActionPerformed

    private void radDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radDecryptActionPerformed
        // TODO add your handling code here:
        lblInput.setText("Bản mã:");
        lblOutput.setText("Bản rõ:");
        btnSubmit.setText("Giải mã");
        
        txtInput.setText(txtOutput.getText());
        txtOutput.setText("");

        btnSubmit.setForeground(Color.RED);
    }//GEN-LAST:event_radDecryptActionPerformed

    private void txtKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKeyActionPerformed
        // TODO add your handling code here:
        txtInput.requestFocus();
    }//GEN-LAST:event_txtKeyActionPerformed

    private void cboEncryptAlgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboEncryptAlgoActionPerformed
        // TODO add your handling code here:
        switch (cboEncryptAlgo.getSelectedIndex()) {

	        case 2 -> {
	            thuatToanDangChon = EnumThuatToan.RAIL_FENCE_CIPHER_ROW;
	        }
            case 1 -> {
                thuatToanDangChon = EnumThuatToan.PLAYFAIR;
            }
            default -> {
                thuatToanDangChon = EnumThuatToan.CAESAR_CIPHER;
            }
        }
    }//GEN-LAST:event_cboEncryptAlgoActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        String input = txtInput.getText();
        String key = txtKey.getText();
        int keyInt = 0;

        if (key.isBlank()) {
            JOptionPane.showMessageDialog(null, "Khoá không được bỏ trống!");
            txtKey.requestFocus();
            return;
        }

        switch (thuatToanDangChon) {

	        case RAIL_FENCE_CIPHER_ROW -> {
	            try {
	            	keyInt = parseInt(key);
	                if (keyInt == -1) {
	                    return;
	                }
	                RailFenceCipher rfc = new RailFenceCipher(input, keyInt, txtLoadConsole);
	                if (radEncrypt.isSelected()) {
	                    txtOutput.setText(rfc.encrypt());
	                } else {
	                    txtOutput.setText(rfc.decrypt());
	                }
	            } catch (Exception e) {
	                JOptionPane.showMessageDialog(null, "Lỗi: " + e.getMessage());
	                e.printStackTrace();
	            }
	        }
            case PLAYFAIR -> {
                try {
                    Playfair playFair = new Playfair(input, key, txtLoadConsole);
                    if (radEncrypt.isSelected()) {
                        txtOutput.setText(playFair.encrypt());
                    } else {
                        txtOutput.setText(playFair.decrypt());
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Lỗi: " + e.getMessage());
                    e.printStackTrace();
                }
            }
            default -> {
                keyInt = parseInt(key);
                if (keyInt == -1) {
                    return;
                }
                CaesarCipher cc = new CaesarCipher(input, keyInt, txtLoadConsole);

                if (radEncrypt.isSelected()) {
                    txtOutput.setText(cc.encrypt());
                } else {
                    txtOutput.setText(cc.decrypt());
                }
            }
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void chkDebugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDebugActionPerformed
        // TODO add your handling code here:
        if (chkDebug.isSelected()) {
            panelConsole.setVisible(true);
        } else {
            panelConsole.setVisible(false);

        }
    }//GEN-LAST:event_chkDebugActionPerformed

    private void btnRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRandomActionPerformed
        // TODO add your handling code here:
        Random random = new Random();
        
        int lengthKey = random.nextInt(5) + 4;
        int lengthContent = random.nextInt(10) + 7;
        
        txtLoadConsole.setText( txtLoadConsole.getText() + "\n----\n Khởi tạo ngẫu nhiên dữ liệu cho " + thuatToanDangChon);
        txtLoadConsole.setText( txtLoadConsole.getText() + "\n Độ dài KHOÁ: " + lengthKey );
        txtLoadConsole.setText( txtLoadConsole.getText() +  "\n Độ dài DỮ LIỆU: " + lengthContent );
        
        switch (thuatToanDangChon) {
            case PLAYFAIR ->{
                char[] keyGen = new char[lengthKey];
                for (int i = 0; i < lengthKey; i++) {
                    keyGen[i] = alphabet.charAt(random.nextInt(alphabet.length()));
                }
                
                
                txtKey.setText(String.valueOf(keyGen));
                
                
                char[] contentyGen = new char[lengthContent];
                for (int i = 0; i < lengthContent; i++) {
                    contentyGen[i] = characters.charAt(random.nextInt(alphabet.length()));
                }
                
                txtInput.setText(String.valueOf(contentyGen));
                
            }
            default -> {
                txtKey.setText(lengthKey + "");
                char[] contentyGen = new char[lengthContent];
                for (int i = 0; i < lengthContent; i++) {
                    contentyGen[i] = characters.charAt(random.nextInt(alphabet.length()));
                }
                
                txtInput.setText(String.valueOf(contentyGen));
            }
        }
        
    }//GEN-LAST:event_btnRandomActionPerformed

    private void btnClearConsoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearConsoleActionPerformed
        // TODO add your handling code here:
        txtLoadConsole.setText("---\n Đã xoá nhật ký \n ---"
                + "\nTác giả: Dương Thái Bảo"
                + "\nXem mã nguồn mở: https://github.com/kennex666/EncryptionAlgorithm-Java");
    }//GEN-LAST:event_btnClearConsoleActionPerformed

    private int parseInt(String number) {
        Pattern pattern = Pattern.compile("\\D+");
        try {
            if (pattern.matcher(number).find()) {
                number = number.replaceAll("\\D+", "");

                if (JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(
                        null,
                        "Thuật toán " + thuatToanDangChon.toString() + " sử dụng key là SỐ. Bạn muốn tự sửa hay lấy số '" + number + "'?",
                        "Chú ý",
                        JOptionPane.YES_NO_OPTION)) {

                    txtKey.setText(number);
                } else {
                    txtKey.requestFocus();
                    return -1;
                }
            }
            if (number.isBlank()) {
                JOptionPane.showMessageDialog(null, "Không tìm thấy số để tự động thay thế, vui lòng nhập thủ công!");
                txtKey.requestFocus();
                return -1;
            }
            return Integer.parseInt(number);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Xuất hiện lỗi bất thường khi cố gắng chuyển đổi KEY thành số, vui lòng kiểm tra lại trường 'Khoá'");
            txtKey.requestFocus();
            txtKey.setToolTipText(thuatToanDangChon + " có khoá là số");
            return -1;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearConsole;
    private javax.swing.JButton btnRandom;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cboEncryptAlgo;
    private javax.swing.JCheckBox chkDebug;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblDebugMode;
    private javax.swing.JLabel lblInput;
    private javax.swing.JLabel lblOutput;
    private javax.swing.JPanel panelConsole;
    private javax.swing.JRadioButton radDecrypt;
    private javax.swing.JRadioButton radEncrypt;
    private javax.swing.JTextArea txtInput;
    private javax.swing.JTextField txtKey;
    private javax.swing.JTextArea txtLoadConsole;
    private javax.swing.JTextArea txtOutput;
    // End of variables declaration//GEN-END:variables
}
